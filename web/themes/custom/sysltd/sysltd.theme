<?php

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function sysltd_theme_suggestions_page_alter(&$suggestions,&$variables) {
    if($node = \Drupal::request()->attributes->get('node')){
        if(is_object($node)){
            if(!empty($node->field_template_name->value))
                $suggestions[] = 'page__'. str_replace([' ','_'],'-',strtolower($node->field_template_name->value));
            else
                $suggestions[] = 'page__'. $node->getType();
        }
    }
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function sysltd_theme_suggestions_node_alter(&$suggestions,&$variables) {
    if($node = \Drupal::request()->attributes->get('node')){
        if(is_object($node) && !empty($node->field_template_name->value)){
            $suggestions[] = 'node__'. str_replace([' ','-'],'_',$node->field_template_name->value);
        }
    }
}
function sysltd_block_view_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
  dpm($block->getPluginId());exit;
  if ($block->getPluginId() == 'modal_block') {
    dpm("this function called!");
    $build['#markup'] = '';

    $block_manager = \Drupal::service('plugin.manager.block');
    $blocks = array(
      'block_plugin_id_1' => 'region_1',
      'block_plugin_id_2' => 'region_2',
      'block_plugin_id_3' => 'region_3',
      // Add more blocks here.
    );

    foreach ($blocks as $plugin_id => $region) {
      if ($instance = $block_manager->createInstance($plugin_id)) {
        $build['#markup'] .= \Drupal::service('renderer')->renderRoot($instance->build());
      }
    }
  }
}
/**
 * Implements sysltd_preprocess_menu().
 */

function sysltd_preprocess_menu(&$variables) {
  $updated_items     = processMenu($variables['items']);
  $variables['items']   = $updated_items;
}

/**
 * @param array $items
 * @return array
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function processMenu(array &$items) {
    $alias_manager = \Drupal::service('path_alias.manager');
    $entity_type_manager = \Drupal::entityTypeManager();
    foreach ($items as &$item) {
        $associated_node = [];
        if(isset($item['content']['field_show_image'][0]) && $item['content']['field_show_image'][0]["#markup"] == 'On'){
            if(!empty($item['url'])) {
                $node_url = $item['url']->toString();
                $system_path = $alias_manager->getPathByAlias($node_url);
                $node_id = substr($system_path, 6);
                if (!empty($node_id)) {
                    $node = $entity_type_manager->getStorage('node')->load($node_id);
                    if(!empty($node)) {
                        $node_body = $node_image = '';
                        $node_title = $node->getTitle();
                        $node_id    = $node->id();
                        $node_type  = $node->getType();
                        if($node->hasField('body')) {
                            $node_body  = $node->get('body')->getValue();
                            if(!empty($node_body))
                                $node_body  = strip_tags($node_body[0]['value']);
                        }
                        if($node->hasField('field_image')) {
                            $image = $node->get('field_image')->first();
                            $image_url = $image->entity->getFileUri();
                            $node_image = \Drupal::service('file_url_generator')->generateAbsoluteString($image_url);
                        }
                        $associated_node = ['id'=>$node_id,'title'=>$node_title,'body' =>$node_body,'type'=>$node_type,'image'=>$node_image];
                    }
                }
            }
        }
        $item['associated_node'] = $associated_node;
        if (!empty($item['below']))
            processMenu($item['below']);
    }
    return $items;
}
function sysltd_preprocess_page(&$variables) {
  $variables['logo'] = theme_get_setting('logo');
  $variables['revenue'] = theme_get_setting('revenue');
  $variables['facebook'] = theme_get_setting('facebook');
  $variables['twitter'] = theme_get_setting('twitter');
  $variables['instagram'] = theme_get_setting('instagram');
  $variables['linkedin'] = theme_get_setting('linkedin');
  $variables['youtube'] = theme_get_setting('youtube');
}
