{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'home-hero-section',
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
    <section id="home-hero" {{ attributes.addClass(classes) }}>
        {% block content %}
            <video autoplay muted loop id="home-hero-video">
                {% if content.field_video %}
                    <source src="{{ content.field_video[0]['#markup'] }}" type="video/mp4">
                    Your browser does not support HTML5 video.
                {% endif %}
            </video>
            <div class="container">
                <div class="row align-items-center text-white">
                    <!-- START THE CONTENT FOR THE INTRO  -->
                    <div class="col-md-12 home-hero text-start">
                        <div class="home-hero-display ">
                            <div class="home-hero-display--intro">
                                <h1>
                                    {% if content.field_title %}
                                        {{ content.field_title[0]['#context']['value']|split(' ')|join(' <br> ')|raw }}
                                    {% endif %}
                                </h1>
                            </div>
                            <div class="home-hero-display--description">
                                <div class="">
                                    {% if content.field_description %}
                                        {{ content.field_description[0]['#context']['value']|raw }}
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        {% if content.field_button_text %}
                            <button type="button" class="btn-rounded home-hero-display--lets-talk"
                                    data-anijs="if: mouseover, do: pulse animated">
                                {{ content.field_button_text[0]["#context"]['value'] }}
                            </button>
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endblock %}
    </section>
{% endblock paragraph %}
